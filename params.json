{"name":"Parse out duplicate city names","tagline":"An example project written in Processing to show how to do some simple parsing and cleaning of a text file, then save out the result.","body":"Parse_Out_Duplicate_City_Names\r\n==============================\r\n\r\nThis is an example project written in Processing to show how to parse and clean a text file, then save out the result.\r\n\r\nSince teaching a class on Processing this past Saturday I've realized that a few code examples of using Processing for some straightforward tasks might be helpful to people getting started with the Processing language and programming in general. \r\n\r\nThis example came out of a problem I had at work where I needed to generate a clean list of names from a text file where each name was listed nine times with some unnecessary.\r\n\r\nThe code below goes through the following steps to create a list of clean city names from an original list where each name had been duplicated nine times.\r\n\r\nThe steps involved are:  \r\n1. Read in a text file from your local hard drive.  \r\n2. Create a new array by selecting every ninth line.  \r\n3. Clean out some extraneous information at the end of each city name.  \r\n4. Save the cleaned version back out to a file on your hard drive.  \r\n\r\nI've added comments for each line which will hopefully provide enough information about how the program works. \r\n\r\nThe file being used in the example is 9000 lines of city names. Each city name is repeated nine times with some random\r\nextraneous data included at the end of each line.\r\n\r\nThis is an example of the content and structure of the example file:\r\n    \"TOKYO, Japan\" - [425083]  \r\n    \"TOKYO, Japan\" - [456198]  \r\n    \"TOKYO, Japan\" - [504920]  \r\n    \"TOKYO, Japan\" - [527316]  \r\n    \"TOKYO, Japan\" - [541281]  \r\n    \"TOKYO, Japan\" - [598284]  \r\n    \"TOKYO, Japan\" - [560637]  \r\n    \"TOKYO, Japan\" - [546684]  \r\n    \"TOKYO, Japan\" - [576558]  \r\n    \"JAKARTA, Indonesia\" - [244097]  \r\n    \"JAKARTA, Indonesia\" - [286973]  \r\n    \"JAKARTA, Indonesia\" - [317604]  \r\n    ...  \r\n\r\nThis is what we are trying to create:  \r\n    \"TOKYO, Japan\"  \r\n    \"JAKARTA, Indonesia\"  \r\n    \"New York (NY), United States\"  \r\n    ...  \r\n\r\n\r\nI've made the code more verbose than what I might normally write so that it is hopefully easier to read and understand.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}